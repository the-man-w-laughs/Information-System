@model WebApplication.Models.ViewModels.CreateCreditModel

@{
    ViewBag.Title = "Создать договор";
}

<style>
    .form-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .control-label {
        font-size: 18px;
        color: #333;
    }

    .custom-input {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
        display: block;
        height: calc(1.5em + 0.75rem + 2px);
        background-color: #fff;
        background-clip: padding-box;
        font-size: 16px;
        color: #555;
    }

    .checkbox label {
        font-weight: normal;
    }

    .btn {
        background-color: white;
        border: 2px solid #4CAF50;
        color: #4CAF50;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
    }

    .btn:hover {
        background-color: #4CAF50;
        color: white;
    }

    .col-md-10 {
        flex: 1;
        margin-left: 0;
    }

    .col-md-offset-2 {
        margin-left: 0;
    }


    .center {
        display: flex;
        justify-content: center; /* Выравнивание по горизонтали */
        align-items: center;
    }
</style>

<div>
    <button onclick="window.location.href='@Url.Action("Index")'" class="btn">Назад</button>
</div>
<div class="form-container">
    <h2>Создать договор</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CreditNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CreditNumber, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.CreditNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PlanId, Model.CreditPlans.Select(e => new SelectListItem()
                {
                    Text = e.Name,
                    Value = e.Id.ToString(),
                }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ClientId, Model.Clients.Select(e => new SelectListItem()
                {
                    Text = $"{e.Surname} {e.Name} {e.Patronymic} {e.IdentificationNumber}",
                    Value = e.Id.ToString(),
                }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateCreditCard, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.CreateCreditCard)
                    @Html.ValidationMessageFor(model => model.CreateCreditCard, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="center">
                <div class="form-group">
                    <input type="submit" value="Создать" class="btn" />
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
