@model WebApplication.Models.ViewModels.Client

@{
    ViewBag.Title = "Добавление клиента";
}

<style>
    .form-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .btn {
        background-color: white;
        border: 2px solid #4CAF50;
        color: #4CAF50;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin-bottom: 10px;
        cursor: pointer;
        border-radius: 5px;
    }

        .btn:hover {
            background-color: #4CAF50;
            color: white;
        }

    /* Стили для ссылок */
    .link {
        color: #4CAF50;
        text-decoration: none;
    }

        .link:hover {
            text-decoration: underline;
        }

    .custom-input {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
        display: block;
        height: calc(1.5em + 0.75rem + 2px);
        background-color: #fff;
        background-clip: padding-box;
        font-size: 16px;
        color: #555;
    }

        .custom-input:focus {
            border-color: #4CAF50;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);
        }

    .control-label {
        font-size: 18px;
        color: #333;
    }

    h2 {
        text-align: center;
        font-style: italic
    }

    .center {
        display: flex;
        justify-content: center; /* Выравнивание по горизонтали */
        align-items: center;
    }
</style>

<div >
    <button onclick="window.location.href='@Url.Action("Index")'" class="btn">Назад</button>
</div>
<div class="form-container">
    <h2>Добавление клиента</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { })
            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
                <div>
                    <div class="radio">
                        @Html.RadioButtonFor(m => m.Gender, "false")
                        <text>Мужской</text>
                    </div>
                    <div class="radio">
                        @Html.RadioButtonFor(m => m.Gender, "true")
                        <text>Женский</text>
                    </div>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PassportSeries, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PassportSeries, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.PassportSeries, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PassportNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PassportNumber, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IssuedBy, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.IssuedBy, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.IssuedBy, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.IssueDate, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ResidenceActualPlace, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ResidenceActualPlace, Model.Places.Select(e => new SelectListItem()
           {
               Text = e,
               Value = e,
           }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.ResidenceActualPlace, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ResidenceActualAddress, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ResidenceActualAddress, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.ResidenceActualAddress, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HomePhoneNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.HomePhoneNumber, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.HomePhoneNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ResidenceAddress, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ResidenceAddress, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.ResidenceAddress, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Citizenship, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Citizenship, Model.Citizenships.Select(e => new SelectListItem()
           {
               Text = e,
               Value = e,
           }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.Citizenship, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.MaritalStatus, Model.MartialStatuses.Select(e => new SelectListItem()
           {
               Text = e,
               Value = e,
           }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Disability, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Disability, Model.DisabilityStatuses.Select(e => new SelectListItem()
           {
               Text = e,
               Value = e,
           }), new { @class = "custom-input" })
                @Html.ValidationMessageFor(model => model.Disability, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pensioner, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Pensioner)
                    @Html.ValidationMessageFor(model => model.Pensioner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MonthlyIncome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MonthlyIncome, new { htmlAttributes = new { @class = "custom-input" } })
                @Html.ValidationMessageFor(model => model.MonthlyIncome, "", new { @class = "text-danger" })
            </div>

            <div class="center">
                <div class="form-group">
                    <div>
                        <input type="submit" value="Создать" class="btn" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
